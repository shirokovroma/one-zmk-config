#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri-layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp LA(N1)         &kp Q          &kp W         &kp E         &kp R              &kp T         &kp Y         &kp U            &kp I            &kp O           &kp P               &kp LA(N2)
                &kp ESC           &kp A          &bhm LCTRL S  &bhm LALT D   &bhm LGUI F        &kp G         &kp H         &bhm RGUI J      &bhm RALT  K     &bhm RCTRL L    &kp SEMI            &kp SQT
                &bhm LSHIFT GRAVE  &bhm LSHIFT Z  &kp X         &kp C         &kp V              &kp B         &kp N         &kp M            &kp COMMA        &kp DOT         &bhm RSHIFT FSLH    &bhm RSHFT BSLH
                                                                &lt RSE BSPC  &lt ADJ SPACE      &lt LWR TAB   &lt LWR RET   &lt ADJ SPACE    &lt RSE DEL
            >;
        };
        lower_layer {
            bindings = <
                &kp  F1           &kp F2           &kp F3           &kp F4        &kp F5        &kp F6                    &kp F7      &kp F8     &kp F9        &kp F10      &kp F11             &kp F12
                &kp PLUS          &trans           &trans           &trans        &trans        &trans                    &kp LEFT    &kp DOWN   &kp UP        &kp RIGHT    &kp COLON           &bhm RCTRL K_APP
                &bhm LSHIFT EQUAL &bhm LSHIFT EXCL &kp AT           &kp HASH      &kp DLLR      &kp PRCNT                 &kp CARET   &kp AMPS   &kp RS(N8)    &kp UNDER    &bhm LSHIFT EQUAL   &bhm RSHFT BSLH
                                                                    &lt ADJ BSPC  &trans        &trans                    &trans    &trans   &lt ADJ DEL
            >;
        };

        raise_layer {
            bindings = <
            &kp FSLH       &kp MINUS   &kp N7   &kp N8       &kp N9       &kp LBKT                &kp RBKT     &trans          &trans             &trans       &trans    &trans 
            &kp RS(N8)     &kp PLUS    &kp N4   &kp N5       &kp N6       &kp LPAR                &kp RPAR     &kp LG(LS(N4))  &kp LG(LC(LS(N4))) &trans       &trans    &trans
            &kp RA(DOT)    &kp N0      &kp N1   &kp N2       &kp N3       &kp LS(LBKT)            &kp RS(RBKT) &trans          &kp RA(COMMA)      &kp RA(DOT)  &trans    &trans
                                                &trans       &trans       &lt ADJ RET             &lt ADJ ESC  &trans          &trans
            >;
        };
        adjust_layer {
            bindings = <
                &bootloader   &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &bootloader
                &bt BT_CLR    &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4   &bt BT_SEL 4   &bt BT_SEL 3   &bt BT_SEL 2   &bt BT_SEL 1   &bt BT_SEL 0   &bt BT_CLR
                &sys_reset    &none          &none          &none          &none          &none          &none          &none          &none          &none          &none          &sys_reset
                                                            &trans         &none          &trans         &none          &trans         &trans
            >;
        };
    };
};
